
"""Top-level input fields for tokenizing a credit card."""
input TokenizeCreditCardInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for a credit card object."""
  creditCard: CreditCardInput!

  """Credit card tokenization options."""
  options: TokenizeCreditCardOptionsInput
}

"""Top-level input fields for tokenizing a CVV."""
input TokenizeCvvInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """A 3 or 4 digit card verification value assigned to credit cards. The CVV will never be stored, but it can be provided with one-time requests to verify the card."""
  cvv: String!
}

"""Top-level input field for tokenizing a Samsung Pay Card."""
input TokenizeSamsungPayCardInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for a Samsung Pay Card object."""
  samsungPayCard: SamsungPayCardInput!
}

"""Top-level input fields for tokenizing Custom Actions."""
input TokenizeCustomActionsPaymentMethodInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for a Custom Actions payment method."""
  customActionsPaymentMethod: CustomActionsPaymentMethodInput!
}

"""Top-level input field for tokenizing a network token."""
input TokenizeNetworkTokenInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for a network token object."""
  networkToken: NetworkTokenInput!
}

"""Top-level input fields for tokenizing a U.S. bank account."""
input TokenizeUsBankAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for a U.S. bank account object."""
  usBankAccount: UsBankAccountInput!
}

"""Top-level input fields for tokenizing a U.S. bank login."""
input TokenizeUsBankLoginInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for a U.S. bank login object."""
  usBankLogin: UsBankLoginInput!
}

"""Top-level input field for generating a client token."""
input CreateClientTokenInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for creating a client token."""
  clientToken: ClientTokenInput
}

"""Input fields for a credit card object."""
input CreditCardInput {
  """The 12-to-19-digit value that uniquely identifies this credit card, also known as the primary account number or PAN."""
  number: String

  """The two- or four-digit year associated with a credit card, formatted `YYYY` or `YY`."""
  expirationYear: String

  """The expiration month of a credit card, formatted `MM`."""
  expirationMonth: String

  """A three- or four-digit card verification value assigned to credit cards. The CVV will never be stored, but it can be provided with one-time requests to verify the card."""
  cvv: String

  """When supplied, the cardholder name to be tokenized with the contents of the fields."""
  cardholderName: String

  """The billing address for the credit card."""
  billingAddress: AddressInput
}

"""Input fields for a Samsung Pay Card object."""
input SamsungPayCardInput {
  """A one-time-use string generated by the token requester to validate the transaction."""
  cryptogram: String!

  """A two-digit string that should be passed along in the authorization message."""
  eCommerceIndicator: ECommerceIndicator!

  """A two-digit string representing the expiration month of the DPAN."""
  expirationMonth: Month!

  """A four-digit string representing the expiration year of the DPAN."""
  expirationYear: Year!

  """The card number provided by Samsung and used in processing. This is a digitized PAN (DPAN), not the backing card number (FPAN)."""
  number: CreditCardNumber!

  """The last four digits of the FPAN (the cardholder's backing card)."""
  sourceCardLast4: CreditCardLast4!
}

"""Input fields for a Custom Actions payment method."""
input CustomActionsPaymentMethodInput {
  """The action you wish to invoke when using the tokenized payment method."""
  actionName: String!

  """Fields that your action requires."""
  fields: [CustomActionsPaymentMethodFieldInput!]!
}

"""Fields that are provided during tokenization and are presented to the invoked action to be consumed."""
input CustomActionsPaymentMethodFieldInput {
  """The name of this field. e.g. "accountNumber"."""
  name: String!

  """The value of this field. e.g. "123456789"."""
  value: String!

  """The value displayed in the Control Panel or API. e.g. "*****6789"."""
  displayValue: String!
}

"""Input fields for a network tokenized card object."""
input NetworkTokenInput {
  """A one-time-use string generated by the token requester to validate the transaction."""
  cryptogram: String!

  """A two-digit string that should be passed along in the authorization message."""
  eCommerceIndicator: ECommerceIndicator!

  """A two-digit string representing the expiration month of the DPAN."""
  expirationMonth: Month!

  """A four-digit string representing the expiration year of the DPAN."""
  expirationYear: Year!

  """The card number used in processing. This is a device PAN (DPAN), not the backing card number (FPAN)."""
  number: CreditCardNumber!
}

"""Input fields for a U.S. bank account object."""
input UsBankAccountInput {
  """The account number of the bank account."""
  accountNumber: UsBankAccountNumber!

  """The routing number of the bank that holds the account."""
  routingNumber: UsBankRoutingNumber!

  """The type of account."""
  accountType: UsBankAccountType!

  """Information about the business that owns the account. This should only be specified for business accounts."""
  businessOwner: UsBankAccountBusinessOwnerInput

  """Information about the individual that owns the account. This should only be specified for individual accounts."""
  individualOwner: UsBankAccountIndividualOwnerInput

  """The billing address of the account."""
  billingAddress: UsBankAccountBillingAddressInput

  """Language used to prove that you have the customer's explicit permission to debit their bank account."""
  achMandate: String!
}

"""Input fields for a U.S. bank login object."""
input UsBankLoginInput {
  """The public token returned from the bank login."""
  publicToken: String!

  """The login provider account id used for the bank login."""
  accountId: String!

  """The type of account."""
  accountType: UsBankAccountType!

  """Information about the business that owns the account. This should only be specified for business accounts."""
  businessOwner: UsBankAccountBusinessOwnerInput

  """Information about the individual that owns the account. This should only be specified for individual accounts."""
  individualOwner: UsBankAccountIndividualOwnerInput

  """The billing address of the account."""
  billingAddress: UsBankAccountBillingAddressInput

  """Language used to prove that you have the customer's explicit permission to debit their bank account."""
  achMandate: String!
}

"""The name of the owner of a business U.S. bank account."""
input UsBankAccountBusinessOwnerInput {
  """The name of the business that owns the account."""
  businessName: String!
}

"""The name of the owner of a personal U.S. bank account."""
input UsBankAccountIndividualOwnerInput {
  """The first name of the accountholder."""
  firstName: String!

  """The last name of the accountholder."""
  lastName: String!
}

"""A billing address for a U.S. bank account. This is a subset of the fields required in `AddressInput`."""
input UsBankAccountBillingAddressInput {
  """The street address."""
  streetAddress: String!

  """The extended address informationâ€”such as apartment or suite number."""
  extendedAddress: String

  """The city."""
  city: String!

  """The state."""
  state: UsStateCode!

  """The ZIP code."""
  zipCode: UsZipCode!
}

"""Credit card tokenization options."""
input TokenizeCreditCardOptionsInput {
  """Whether to run validations on credit card fields. Validations are not run by default."""
  validate: Boolean
}

"""Input fields when requesting authentication insight for a payment method."""
input AuthenticationInsightInput {
  """ID of the merchant account that will be used when charging this payment method."""
  merchantAccountId: ID!
}

"""Input fields for an Address."""
input AddressInput {
  """Company name. 255 character maximum."""
  company: String

  """The street address. 255 character maximum."""
  streetAddress: String

  """Extended address information, such as apartment or suite number. 255 character maximum."""
  extendedAddress: String

  """First name. 255 character maximum."""
  firstName: String

  """Last name. 255 character maximum."""
  lastName: String

  """Locality/city. 255 character maximum."""
  locality: String

  """State or province. 255 character maximum."""
  region: String

  """
  Postal code in any country's format, otherwise known as CAP, CEP, Eircode, NPA, PIN, PLZ, or ZIP code. Nine alphanumeric characters maximum, may also contain spaces and hyphens.

  *Required for Level 3 processing*.
  """
  postalCode: String

  """
  Country code for the address in ISO 3166-1 alpha-3 format.

  *Required for Level 3 processing*.
  """
  countryCode: CountryCodeAlpha3

  """
  Deprecated: This field is included for supporting legacy clients. Please use `countryCode` instead.

  Country code for the address in ISO 3166-1 alpha-3 format.
  """
  countryCodeAlpha3: String

  """
  Deprecated: This field is included for supporting legacy clients. Please use `countryCode` instead.

  Country code for the address in ISO 3166-1 alpha-2 format.
  """
  countryCodeAlpha2: String

  """
  Deprecated: This field is included for supporting legacy clients. Please use `countryCode` instead.

  Country code for the address in ISO 3166-1 numeric format.
  """
  countryCodeNumeric: String

  """
  Deprecated: This field is included for supporting legacy clients. Please use `countryCode` instead.

  Country name for the address.
  """
  countryName: String
}

"""Input fields for creating a client token."""
input ClientTokenInput {
  """Merchant account ID used to create the client token. Defaults to your default merchant account ID."""
  merchantAccountId: ID

  """An ID of an existing customer. Including this will allow your customer to vault and manage their payment methods."""
  customerId: ID
}

"""Top-level input fields for deleting a multi-use payment method from the vault."""
input DeletePaymentMethodFromVaultInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of the multi-use payment method to be deleted."""
  paymentMethodId: ID!
}

"""Top-level input fields for deleting a payment method referenced by a single-use token."""
input DeletePaymentMethodFromSingleUseTokenInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """A single-use token ID referencing a payment method."""
  singleUseTokenId: ID!
}

"""Top-level input fields for creating a transaction by authorizing a payment method."""
input AuthorizePaymentMethodInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of a payment method to be authorized."""
  paymentMethodId: ID!

  """Input fields for the authorization, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Top-level input fields for creating a transaction by authorizing a payment method."""
input AuthorizePayPalAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of a payment method to be authorized."""
  paymentMethodId: ID!

  """Input fields related to the PayPal account being charged."""
  options: AuthorizePayPalAccountOptionsInput

  """Input fields for the authorization, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Top-level input fields for creating a transaction by authorizing a payment method."""
input AuthorizeVenmoAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of a payment method to be authorized."""
  paymentMethodId: ID!

  """Input fields related to the Venmo account being charged."""
  options: AuthorizeVenmoAccountOptionsInput

  """Input fields for the authorization, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Top-level input fields for capturing an authorized transaction."""
input CaptureTransactionInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of a transaction to be captured."""
  transactionId: ID!

  """
  Deprecated: This field is included for supporting legacy clients. Please use `transaction.amount` instead.

  The amount to capture on the transaction. Must be greater than 0. You can't capture more than the authorized amount unless your industry and processor support settlement adjustment (capturing a certain percentage over the authorized amount); contact [Braintree support](mailto:support@braintreepayments.com) for details. If you capture an amount that is less than what was authorized, the transaction object will return the amount captured.
  """
  amount: Amount

  """Input fields for the capture, with details that will define the resulting transaction."""
  transaction: CaptureTransactionOptionsInput
}

"""Input fields for a capture, with details that will define the resulting transaction."""
input CaptureTransactionOptionsInput {
  """The amount to capture on the transaction. Must be greater than 0. You can't capture more than the authorized amount unless your industry and processor support settlement adjustment (capturing a certain percentage over the authorized amount); contact [Braintree support](mailto:support@braintreepayments.com) for details. If you capture an amount that is less than what was authorized, the transaction object will return the amount captured."""
  amount: Amount

  """Fields used to define what will appear on a customer's bank statement for a specific purchase. If specified, this will update the existing descriptor on the transaction."""
  descriptor: TransactionDescriptorInput

  """Additional information about the transaction. On PayPal transactions, this field maps to the PayPal invoice number. PayPal invoice numbers must be unique in your PayPal business account. Maximum 255 characters or 127 for PayPal transactions. If specified, this will update the existing order ID on the transaction."""
  orderId: String
}

"""Top-level input fields for capturing an outstanding funds authorized by a transaction."""
input PartialCaptureTransactionInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of the original authorized transaction to be partially captured."""
  transactionId: ID!

  """Input fields for the capture, with details that will define the resulting capture transaction."""
  transaction: PartialCaptureTransactionOptionsInput
}

"""Input fields for the capture, with details that will define the resulting capture transaction."""
input PartialCaptureTransactionOptionsInput {
  """The amount to capture on the transaction against the parent authorization transaction. Must be greater than 0. You can perform multiple partial capture transactions as long as the cumulative amount of those transactions is less than or equal to the amount authorized by the parent transaction. You can't capture more than the authorized amount unless your industry and processor support settlement adjustment (capturing a certain percentage over the authorized amount); contact [Braintree support](mailto:support@braintreepayments.com) for details."""
  amount: Amount!

  """Additional information about the transaction. On PayPal transactions, this field maps to the PayPal invoice number. PayPal invoice numbers must be unique in your PayPal business account. Maximum 255 characters or 127 for PayPal transactions. If specified, this will update the existing order ID on the transaction."""
  orderId: String
}

"""Top-level input fields for creating a transaction by charging a payment method."""
input ChargePaymentMethodInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of a payment method to be charged."""
  paymentMethodId: ID!

  """Input fields for the charge, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Top-level input fields for creating a transaction by charging a US bank account."""
input ChargeUsBankAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of an existing US bank account."""
  paymentMethodId: ID!

  """Input fields related to the US bank account being charged."""
  options: ChargeUsBankAccountOptionsInput

  """Input fields for the charge, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Top-level input fields for creating a transaction by charging a PayPal account."""
input ChargePayPalAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of an existing PayPal account."""
  paymentMethodId: ID!

  """Input fields related to the PayPal account being charged."""
  options: ChargePayPalAccountOptionsInput

  """Input fields for the charge, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Top-level input fields for creating a transaction by charging a Venmo account."""
input ChargeVenmoAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of an existing Venmo account."""
  paymentMethodId: ID!

  """Input fields for creating a Pay with Venmo transaction."""
  options: ChargeVenmoAccountOptionsInput

  """Input fields for the charge, with details that will define the resulting transaction."""
  transaction: TransactionInput!
}

"""Input fields for creating a transaction."""
input TransactionInput {
  """Billing amount of the request. This value must be greater than 0, and must match the currency format of the merchant account. Can only contain numbers and one decimal point (e.g. x.xx). Can't be greater than the maximum allowed by the processor."""
  amount: Amount!

  """Merchant account ID used to process the transaction. Currency is also determined by merchant account ID. If no merchant account ID is specified, we will use your default merchant account."""
  merchantAccountId: ID

  """Additional information about the transaction. On PayPal transactions, this field maps to the PayPal invoice number. PayPal invoice numbers must be unique in your PayPal business account. Maximum 255 characters or 127 for PayPal transactions."""
  orderId: String

  """
  A purchase order identification value you associate with this transaction.

  *Required for Level 2 processing*.
  """
  purchaseOrderNumber: String

  """Customer device information, which is sent directly to supported processors for fraud analysis."""
  riskData: RiskDataInput

  """Collection of custom field/value pairs. You must [set up each custom field in the Control Panel](https://articles.braintreepayments.com/control-panel/custom-fields#creating-a-custom-field) prior to passing it with a request."""
  customFields: [CustomFieldInput!]

  """Fields used to define what will appear on a customer's bank statement for a specific purchase."""
  descriptor: TransactionDescriptorInput

  """The type of recurring payment the transaction represents."""
  recurring: RecurringType

  """For partners and shopping carts only. If you are a shopping cart provider or other Braintree partner, pass a string identifier for your service. For PayPal transactions, this maps to paypal.bn_code."""
  channel: String

  """If charging a single-use payment method, optional ID of a customer to associate the transaction with."""
  customerId: ID

  """
  Shipping information.

  *Required for Level 3 processing*.
  """
  shipping: TransactionShippingInput

  """
  Tax information about the transaction.

  *Required for Level 2 processing*.
  """
  tax: TransactionTaxInput

  """
  Discount amount that was included in the total transaction amount. Does not add to the total amount the payment method will be charged. This value can't be negative.

  *Required for Level 3 processing*.
  """
  discountAmount: String

  """
  Line items for this transaction. Up to 249 line items may be specified.

  *Required for Level 3 processing*.
  """
  lineItems: [TransactionLineItemInput!]

  """Results of a merchant-performed 3D Secure authentication. You will only need to use these fields if you've performed your own integration with a 3D Secure MPI provider (e.g. Cardinal Centinel). Otherwise, Braintree's SDKs handle this for you in our standard 3D Secure integration."""
  threeDSecurePassThrough: ThreeDSecurePassThroughInput
}

"""Input for creating or updating custom fields on a transaction."""
input UpdateTransactionCustomFieldsInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of the transaction to update."""
  transactionId: ID!

  """The list of custom fields to update. You must [set up each custom field in the Control Panel](https://articles.braintreepayments.com/control-panel/custom-fields#creating-a-custom-field) prior to passing it with a request."""
  customFields: [CustomFieldInput!]!
}

"""Information related to shipping a physical product."""
input TransactionShippingInput {
  """
  Shipping destination address information.

  *Required for Level 3 processing*.
  """
  shippingAddress: AddressInput

  """
  Shipping cost on the entire transaction.

  *Required for Level 3 processing*.
  """
  shippingAmount: String

  """
  The postal code of the source shipping location, in any country's format.

  *Required for Level 3 processing*.
  """
  shipsFromPostalCode: String
}

"""Information related to taxes on the transaction."""
input TransactionTaxInput {
  """
  Amount of tax that was included in the total transaction amount. Does not add to the total amount the payment method will be charged.

  *Required for Level 2 processing* unless `taxExempt` is `true`.
  """
  taxAmount: Amount

  """
  Whether the transaction should be considered eligible for tax exemption.

  *Required for Level 2 processing*.
  """
  taxExempt: Boolean
}

"""Data for individual line items on a transaction."""
input TransactionLineItemInput {
  """
  Item name. Maximum 35 characters, or 127 characters for PayPal transactions.

  *Required for Level 3 processing*.
  """
  name: String!

  """
  Indicates whether the line item is a sale or refund.

  *Required for Level 3 processing*.
  """
  kind: TransactionLineItemType!

  """
  Number of units of the item purchased. Can include up to 4 decimal places. This value can't be negative or zero.

  *Required for Level 3 processing*.
  """
  quantity: String!

  """
  Per-unit price of the item. Maximum 4 decimal places, or 2 decimal places for PayPal transactions. This value can't be negative or zero.

  *Required for Level 3 processing*.
  """
  unitAmount: String!

  """
  Total price amount for the line item: quantity multiplied by unitAmount. Can include up to 2 decimal places.

  *Required for Level 3 processing*.
  """
  totalAmount: String!

  """
  Per-unit tax price of the item. Can include up to 2 decimal places. This value can't be negative or zero.

  *Required for Level 3 processing*.
  """
  unitTaxAmount: String

  """
  Tax amount for the line item. Can include up to 2 decimal places. This value can't be negative.

  *Required for Level 3 processing*.
  """
  taxAmount: String

  """
  Amount of discount for the line item. Can include up to 2 decimal places. This value can't be negative.

  *Required for Level 3 processing*.
  """
  discountAmount: String

  """
  The unit of measure or the unit of measure code. Maximum 12 characters.

  *Required for Level 3 processing*.
  """
  unitOfMeasure: String

  """
  Product or UPC code for the item. Maximum 12 characters, or 127 characters for PayPal transactions.

  *Required for Level 3 processing*.
  """
  productCode: String

  """
  Code used to classify items purchased and track the total amount spent across various categories of products and services. Different corporate purchasing organizations may use different standards, but the [United Nations Standard Products and Services Code (UNSPSC)](https://www.unspsc.org/) is frequently used. Maximum 12 characters.

  *Required for Level 3 processing*.
  """
  commodityCode: String

  """
  Item description. Maximum 127 characters.

  *Required for Level 3 processing*.
  """
  description: String

  """
  A URL to information about the product.

  *Required for Level 3 processing*.
  """
  url: String
}

"""Fields used to define what will appear on a customer's bank statement for a specific purchase."""
input TransactionDescriptorInput {
  """The value in the business name field of a customer's statement."""
  name: String

  """The value in the phone number field of a customer's statement."""
  phone: String

  """The value in the URL/web address field of a customer's statement."""
  url: String
}

"""Input fields for creating a transaction with a US bank account."""
input ChargeUsBankAccountOptionsInput {
  """A NACHA standard entry class (SEC) code, which designates how the transaction was authorized. Most internet-based sales should use the `WEB` code."""
  standardEntryClassCode: ACHStandardEntryClassCode
}

"""Input fields for creating a transaction with a PayPal account."""
input ChargePayPalAccountOptionsInput {
  """Variable passed directly to PayPal for your own tracking purposes. Customers do not see this value."""
  customField: String

  """Description of the transaction that is displayed to customers in PayPal email receipts."""
  description: String

  """Deprecated: This field is no longer supported."""
  payee: PayPalPayeeOptionsInput
}

"""Input fields for authorizing a PayPal account."""
input AuthorizePayPalAccountOptionsInput {
  """Variable passed directly to PayPal for your own tracking purposes. Customers do not see this value."""
  customField: String

  """Description of the transaction that is displayed to customers in PayPal email receipts."""
  description: String

  """Deprecated: This field is no longer supported."""
  payee: PayPalPayeeOptionsInput
}

"""Input fields for a PayPal account receiving transaction funds."""
input PayPalPayeeOptionsInput {
  """The email address associated with the payee PayPal account."""
  email: String
}

"""Input fields for creating a Pay with Venmo transaction."""
input ChargeVenmoAccountOptionsInput {
  """Specifies which Venmo business profile to use for the transaction."""
  profileId: String
}

"""Input fields for authorizing a Venmo account."""
input AuthorizeVenmoAccountOptionsInput {
  """Specifies which Venmo business profile to use for the transaction."""
  profileId: String
}

"""Input fields for a risk data object."""
input RiskDataInput {
  """The User-Agent header provided by the customer's browser, which gives information about the browser. Maximum 255 characters."""
  customerBrowser: String

  """The customer's IP address."""
  customerIp: String

  """Customer device information. Required when creating transactions using cards (only if using Advanced Fraud Tools), PayPal (only for one-time Vaulted PayPal transactions), and Venmo payment method types. This value will contain a Fraud Merchant ID as the unique, numeric identifier for a Kount account and a Device Session ID as the unique identifier for a customer device. For PayPal and Venmo transactions, this value will also include a PayPal Correlation ID."""
  deviceData: String
}

"""Custom field name/value pairs. Maximum 255 characters. You must [set up each custom field in the Control Panel](https://articles.braintreepayments.com/control-panel/custom-fields#creating-a-custom-field) prior to passing it with a request."""
input CustomFieldInput {
  """Name of the custom field as defined in the Control Panel."""
  name: CustomFieldName!

  """Value for the named custom field. A null value will ignore (on create) or remove (on update) the custom field."""
  value: String
}

"""Top-level input field for vaulting a payment method so it can be used multiple times."""
input VaultPaymentMethodInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of an existing single-use payment method to be vaulted."""
  paymentMethodId: ID!

  """
  Deprecated: This field is included for supporting legacy clients. Please use `verification.merchantAccountId` instead.

  ID of the merchant account to use when verifying the payment method.
  """
  verificationMerchantAccountId: ID

  """Input fields that specify options for verifying the vaulted payment method, if it is of a type that supports verification."""
  verification: VaultPaymentMethodVerificationOptionsInput

  """ID of the customer to associate the resulting multi-use payment method with."""
  customerId: ID

  """Results of a merchant-performed 3D Secure authentication. You will only need to use these fields if you've performed your own integration with a 3D Secure MPI provider (e.g. Cardinal Centinel). Otherwise, Braintree's SDKs handle this for you in our standard 3D Secure integration."""
  threeDSecurePassThrough: ThreeDSecurePassThroughInput
}

"""Input fields that specify options for verifying the vaulted payment method."""
input VaultPaymentMethodVerificationOptionsInput {
  """ID of the merchant account to use when verifying the payment method. The verification will use the default merchant account if this field is left blank."""
  merchantAccountId: ID

  """Whether to opt-out of payment method verification. Payment methods that support verification are verified by default. Clients should only pass `true` in the uncommon scenario that the payment method has been verified externally to Braintree."""
  skip: Boolean
}

"""Top-level input field for vaulting a bank account so it can be used multiple times."""
input VaultUsBankAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of an existing single-use payment method to be vaulted."""
  paymentMethodId: ID!

  """ID of the merchant account to use when verifying the payment method."""
  verificationMerchantAccountId: ID

  """ID of the customer to associate the resulting multi-use payment method with."""
  customerId: ID

  """Type of US bank account verification to perform."""
  verificationMethod: UsBankAccountVerificationMethod!
}

"""Top-level input field for vaulting a limited use PayPal account."""
input VaultLimitedUsePayPalAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of an existing single-use PayPal account generated using the order flow."""
  paymentMethodId: ID!

  """ID of the customer to associate the resulting payment method with."""
  customerId: ID

  """Input fields that specify information about the resulting PayPal account."""
  options: VaultLimitedUsePayPalAccountOptionsInput
}

"""Input fields that specify information about the resulting PayPal account."""
input VaultLimitedUsePayPalAccountOptionsInput {
  """The total amount of the order. This will be the limit to how much may be captured on the resulting payment method."""
  amount: Amount

  """Variable passed directly to PayPal for your own tracking purposes. Customers do not see this value."""
  customField: String

  """Description of the transaction that is displayed to customers in PayPal email receipts."""
  description: String

  """The PayPal invoice number. It must be unique in your PayPal business account and can contain a maxiumum of 127 characters. If specified, transactions created from the resulting payment method will have this orderId."""
  orderId: String

  """Shipping destination address information."""
  shippingAddress: AddressInput
}

"""Top-level input field for verifying a multi-use payment method."""
input VerifyPaymentMethodInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of an existing multi-use payment method to be verified."""
  paymentMethodId: ID!

  """ID of the merchant account to use when verifying the payment method."""
  merchantAccountId: ID
}

"""Top-level input field for retrying a verification on a bank account."""
input VerifyUsBankAccountInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of an existing multi-use payment method to be vaulted."""
  paymentMethodId: ID!

  """ID of the merchant account to use when verifying the payment method."""
  merchantAccountId: ID

  """Type of US bank account verification to perform."""
  verificationMethod: UsBankAccountVerificationMethod!
}

"""Top-level input field for confirming micro-transfer values."""
input ConfirmMicroTransferAmountsInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of the verification from vaulting the bank account."""
  verificationId: ID!

  """The amounts, in cents, of two deposits made into the customer's bank account after initiating a MICRO_TRANSFERS verification. These values should be collected from your customer."""
  amountsInCents: [Int!]!
}

"""Top-level input fields for refunding a transaction."""
input RefundTransactionInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of a transaction to be refunded."""
  transactionId: ID!

  """Input fields for the details of the refund."""
  refund: RefundInput
}

"""Specific input fields for describing a refund."""
input RefundInput {
  """Amount that should be refunded. Must be less than or equal to the amount of the original transaction. Defaults to the total amount of the original transaction."""
  amount: Amount

  """The refund's order ID. Defaults to the order ID of the original transaction."""
  orderId: String
}

"""Input fields for reversing a transaction."""
input ReverseTransactionInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of the transaction to reverse."""
  transactionId: ID!
}

"""Input fields for searching text fields."""
input SearchTextInput {
  """Field is exactly this value."""
  is: String

  """Field is not this value."""
  isNot: String

  """Field starts with this value."""
  startsWith: String

  """Field ends with this value."""
  endsWith: String

  """Field contains this value."""
  contains: String
}

"""Input fields for searching for specific values."""
input SearchValueInput {
  """Field is exactly this value."""
  is: String

  """Field is one of these values."""
  in: [String!]
}

"""Input fields for searching for a range."""
input SearchRangeInput {
  """Field is exactly this value."""
  is: String

  """Field is greater than or equal to this value."""
  greaterThanOrEqualTo: String

  """Field is less than or equal to this value."""
  lessThanOrEqualTo: String
}

"""Input fields for searching for a timestamp. These ranges are precise to the minute; the results of search for transactions or refunds created between 12/17/2015 17:00 and 12/17/2015 17:00 will include a transaction created at 12/17/2015 17:00:59."""
input SearchTimestampInput {
  """Timestamp is greater than or equal to this value."""
  greaterThanOrEqualTo: Timestamp

  """Timestamp is less than or equal to this value."""
  lessThanOrEqualTo: Timestamp
}

"""Input fields for searching for a transaction or refund with a given status."""
input SearchTransactionStatusInput {
  """The transaction status is exactly this value."""
  is: TransactionStatus

  """The transaction status is one of these values."""
  in: [TransactionStatus!]
}

"""Input fields for searching for a transaction or refund created with a given source."""
input SearchTransactionSourceInput {
  """The transaction source is one of these values."""
  in: [TransactionSource!]
}

"""Input fields for searching for a dispute with a given status."""
input SearchDisputeStatusInput {
  """The dispute status is exactly this value."""
  is: DisputeStatus

  """The dispute status is one of these values."""
  in: [DisputeStatus!]
}

"""Input fields for searching for a dispute with a given type."""
input SearchDisputeTypeInput {
  """The dispute type is exactly this value."""
  is: DisputeType

  """The dispute type is one of these values."""
  in: [DisputeType!]
}

"""Input fields for searching for a verification with a given status."""
input SearchVerificationStatusInput {
  """The verification status is exactly this value."""
  is: VerificationStatus

  """The verification status is one of these values."""
  in: [VerificationStatus!]
}

"""Transaction status transition times."""
input SearchTransactionStatusTransitionInput {
  """Find transactions with a given failed at time."""
  failedAt: SearchTimestampInput

  """Find transactions with a given settled at time."""
  settledAt: SearchTimestampInput

  """Find transactions with a given submitted for settlement time."""
  submittedForSettlementAt: SearchTimestampInput

  """Find transactions with a given voided at time."""
  voidedAt: SearchTimestampInput
}

"""Input fields for searching transactions by customer."""
input SearchCustomerInput {
  """Find transactions with a given customer id."""
  id: SearchValueInput
}

"""Input fields for searching transactions by payment method snapshot type."""
input SearchPaymentMethodSnapshotTypeInput {
  """This value represents the payment method type used to create a transaction. In the case of credit cards, this value also encode the origin from which a customer provided that payment method."""
  is: PaymentMethodSnapshotSearchType

  """These values represent the payment method type used to create a transaction. In the case of credit cards, these values also encode the origin from which a customer provided that payment method."""
  in: [PaymentMethodSnapshotSearchType!]
}

"""Input fields for searching for a transaction or refund amount."""
input MonetaryAmountSearchInput {
  """Find transactions for a given amount."""
  value: SearchRangeInput

  """Find transaction with a given currency."""
  currencyIsoCode: SearchTextInput
}

"""Input fields for searching for transactions."""
input TransactionSearchInput {
  """Find transactions with an id or ids."""
  id: SearchValueInput

  """Find transactions for a given amount or currency."""
  amount: MonetaryAmountSearchInput

  """Find transactions with a given orderId."""
  orderId: SearchTextInput

  """Find transactions with a given transaction status."""
  status: SearchTransactionStatusInput

  """Find transactions with a given transaction source."""
  source: SearchTransactionSourceInput

  """Find transactions with a given created at time."""
  createdAt: SearchTimestampInput

  """Find transactions based on given transaction status transition times."""
  statusTransition: SearchTransactionStatusTransitionInput

  """Find transactions with a given customer."""
  customer: SearchCustomerInput

  """Find transactions created by charging payment methods of the given type."""
  paymentMethodSnapshotType: SearchPaymentMethodSnapshotTypeInput

  """Find transactions created by a third party via the Grant API using a given OAuth application client ID."""
  facilitatorOAuthApplicationClientId: SearchValueInput
}

"""Input fields for searching for Disputes."""
input DisputeSearchInput {
  """Find disputes with a given status."""
  status: SearchDisputeStatusInput

  """Find disputes with a given type."""
  type: SearchDisputeTypeInput
}

"""Input fields for searching for refunds."""
input RefundSearchInput {
  """Find refunds with an id or ids."""
  id: SearchValueInput

  """Find refund for a given amount or currency."""
  amount: MonetaryAmountSearchInput

  """Find refunds with a given created at time."""
  createdAt: SearchTimestampInput

  """Find refunds with a given orderId."""
  orderId: SearchTextInput

  """Find refunds with a given status."""
  status: SearchTransactionStatusInput
}

"""Input fields for searching for verifications."""
input VerificationSearchInput {
  """Find verifications with an id or ids."""
  id: SearchValueInput

  """Find verifications with a given status."""
  status: SearchVerificationStatusInput

  """Find verifications with a given created at time."""
  createdAt: SearchTimestampInput
}

"""Top-level field for creating a customer."""
input CreateCustomerInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """Input fields for creating a customer."""
  customer: CustomerInput
}

"""Top-level field for updating a customer."""
input UpdateCustomerInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of the customer to be updated."""
  customerId: ID!

  """Input fields for the updates to be made on the customer."""
  customer: CustomerInput
}

"""Input fields for creating or updating a customer. On update, omitted fields will not be updated. Passing a null value will assign null to that field."""
input CustomerInput {
  """Company or business name associated with the customer."""
  company: String

  """Collection of custom field/value pairs. You must [set up each custom field in the Control Panel](https://articles.braintreepayments.com/control-panel/custom-fields#creating-a-custom-field) prior to passing it with a request."""
  customFields: [CustomFieldInput!]

  """Email address for the customer."""
  email: String

  """Customer's first name."""
  firstName: String

  """Customer's last name."""
  lastName: String

  """Phone number for the customer."""
  phoneNumber: String
}

"""Top-level input fields for deleting a customer."""
input DeleteCustomerInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """The ID of the customer to be deleted."""
  customerId: ID!
}

"""Top-level fields for performing a 3D Secure Lookup."""
input PerformThreeDSecureLookupInput {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of the merchant account that will be used when charging the payment method."""
  merchantAccountId: ID

  """Reference ID used by our MPI provider CardinalCommerce to connect the lookup request to the device data that was previously collected."""
  dfReferenceId: String

  """The ID of a single-use payment method to perform the lookup on."""
  paymentMethodId: ID!

  """The amount you plan to charge the payment method after the 3D Secure authentication."""
  amount: Amount!

  """Additional information about the transaction when authenticating through 3D Secure."""
  transactionInformation: ThreeDSecureLookupTransactionInformationInput

  """Additional information about the cardholder when authenticating through 3D Secure."""
  cardholderInformation: ThreeDSecureLookupCardholderInformationInput

  """When set to true, requests a 3D Secure authentication challenge from the issuer. A challenge will result in the acsUrl field being populated on the response, requiring you to open the challenge on the client side."""
  requestAuthenticationChallenge: Boolean

  """Information about the client-side lookup process."""
  clientInformation: ThreeDSecureLookupClientInformationInput
}

"""Additional information about the cardholder when authenticating through 3D Secure."""
input ThreeDSecureLookupCardholderInformationInput {
  """The billing address of the cardholder."""
  billingAddress: ThreeDSecureLookupBillingAddressInput
}

"""Additional information about the transaction when authentication through 3D Secure."""
input ThreeDSecureLookupTransactionInformationInput {
  """The email associated with the transaction."""
  email: String

  """Indicates the shipping method chosen for the transaction in the 3D Secure lookup."""
  shippingMethod: ThreeDSecureLookupShippingMethod

  """The phone number associated with the transaction."""
  phoneNumber: String
}

""" The billing address of the cardholder sent with 3D Secure Lookup requests."""
input ThreeDSecureLookupBillingAddressInput {
  """The given (first) name associated with the billing address used for verification."""
  givenName: String

  """The surname (last name) associated with the billing address used for verification."""
  surname: String

  """The billing phone number used for verification."""
  phoneNumber: String

  """Line 1 of the billing address used for verification."""
  line1: String

  """Line 2 of the billing address used for verification."""
  line2: String

  """Line 3 of the billing address used for verification."""
  line3: String

  """City or locality of billing address used for verification."""
  locality: String

  """State or region of billing address used for verification."""
  region: String

  """Country code of billing address used for verification."""
  countryCode: String

  """Postal code of billing address used for verification."""
  postalCode: String
}

"""Information about the client side lookup process."""
input ThreeDSecureLookupClientInformationInput {
  """Version of the Braintree client-side SDK being used."""
  sdkVersion: String

  """Version of 3D Secure requested when performing the lookup."""
  requestedThreeDSecureVersion: String

  """Number of milliseconds taken for the issuer to collect device data."""
  issuerDeviceDataCollectionMillisecondsElapsed: Int

  """Whether device data collection by the issuer succeeded."""
  issuerDeviceDataCollectionResult: Boolean

  """Number of milliseconds taken for the 3D Secure server to collect device data."""
  threeDSecureServerDeviceDataCollectionMillisecondsElapsed: Int
}

"""Input fields for submitting a credit card for account updater."""
input SubmitCreditCardForAccountUpdaterInput @hidden {
  """An identifier used to reconcile requests and responses."""
  clientMutationId: String

  """ID of the credit card to submit for account updater."""
  paymentMethodId: ID!
}

"""Results of a merchant-performed 3D Secure authentication."""
input ThreeDSecurePassThroughInput {
  """The value of the electronic commerce indicator (ECI) flag, which indicates the outcome of the 3D Secure authentication."""
  eciFlag: ECommerceIndicator!

  """Cardholder authentication verification value or CAVV. The main encrypted message issuers and card networks use to verify authentication has occurred. Mastercard uses an AVV (Authentication Verification Value) message and American Express uses an AEVV (American Express Verification Value) message, each of which should also be passed in the cavv parameter."""
  cavv: String

  """Transaction identifier resulting from 3D Secure authentication. Uniquely identifies the transaction and sometimes required in the authorization message. Must be base64-encoded. This field will no longer be used in 3D Secure 2 authentications."""
  xId: String

  """Transaction identifier resulting from 3D Secure 2 authentication. This field must be supplied for Mastercard Identity Check."""
  threeDSecureServerTransactionId: String

  """The version of 3D Secure authentication used for the transaction. Required on Visa and Mastercard authentications."""
  version: ThreeDSecureVersion

  """The 3D Secure authentication response status code."""
  authenticationResponse: ThreeDSecureStatusCode

  """The 3D Secure directory server response."""
  directoryServerResponse: ThreeDSecureStatusCode

  """The algorithm used to generate the CAVV value. This is only returned for MasterCard SecureCode transactions (3DS 1.0)."""
  cavvAlgorithm: ThreeDSecureCavvAlgorithm
}
